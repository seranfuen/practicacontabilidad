// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticaContabilidad.Model;

namespace PracticaContabilidad.Migrations
{
    [DbContext(typeof(ContabilidadDbContext))]
    [Migration("20190728153112_Presets")]
    partial class Presets
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracticaContabilidad.Model.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountType");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<decimal>("Credit");

                    b.Property<decimal>("Debit");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.JournalEntryGroup", b =>
                {
                    b.Property<int>("JournalEntryGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.HasKey("JournalEntryGroupId");

                    b.ToTable("JournalEntryGroups");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.JournalEntryGroupPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("SoftDeleted");

                    b.HasKey("Id");

                    b.ToTable("JournalEntryGroupPresets");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.JournalEntryPresetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<int>("DebitCredit");

                    b.Property<int?>("JournalEntryGroupPresetId");

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryGroupPresetId");

                    b.ToTable("JournalEntryPresetEntry");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.LedgerEntry", b =>
                {
                    b.Property<int>("LedgerEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("EntryDate");

                    b.Property<decimal>("EntryValue");

                    b.Property<int?>("JournalEntryGroupId");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000);

                    b.HasKey("LedgerEntryId");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryGroupId");

                    b.ToTable("LedgerEntry");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.JournalEntryPresetEntry", b =>
                {
                    b.HasOne("PracticaContabilidad.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("PracticaContabilidad.Model.JournalEntryGroupPreset")
                        .WithMany("PresetEntries")
                        .HasForeignKey("JournalEntryGroupPresetId");
                });

            modelBuilder.Entity("PracticaContabilidad.Model.LedgerEntry", b =>
                {
                    b.HasOne("PracticaContabilidad.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PracticaContabilidad.Model.JournalEntryGroup")
                        .WithMany("LedgerEntries")
                        .HasForeignKey("JournalEntryGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
